//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id String [pk]
  name String [not null]
  email String [unique, not null]
  password String [not null]
  role Role [not null, default: 'CUSTOMER']
  phone String [unique]
  profilePic String
  isActive Boolean [not null, default: true]
  chefProfile ChefProfile
  orders Order [not null]
  reviews Review [not null]
  payments Payment [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table ChefProfile {
  id String [pk]
  user User [not null]
  userId String [unique, not null]
  bio String
  cuisineTags String[] [not null]
  isVerified Boolean [not null, default: false]
  isActive Boolean [not null, default: true]
  address String [not null]
  city String [not null]
  state String
  country String [not null, default: 'US']
  latitude Decimal
  longitude Decimal
  deliveryRadius Decimal [not null, default: 10]
  minOrderAmount Decimal [not null, default: 15]
  avgDeliveryTime Int [not null, default: 45]
  dishes Dish [not null]
  orders Order [not null]
  reviews Review [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table Dish {
  id String [pk]
  chef ChefProfile [not null]
  chefId String [not null]
  title String [not null]
  description String [not null]
  price Decimal [not null]
  images String[] [not null]
  isAvailable Boolean [not null, default: true]
  tags String[] [not null]
  category String
  preparationTime Int
  orderItems OrderItem [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table Order {
  id String [pk]
  orderNumber String [unique, not null]
  customer User [not null]
  customerId String [not null]
  chef ChefProfile [not null]
  chefId String [not null]
  status OrderStatus [not null, default: 'PENDING']
  items OrderItem [not null]
  totalPrice Decimal [not null]
  notes String
  deliveryAddress String [not null]
  deliveryFee Decimal [not null, default: 5]
  estimatedDeliveryTime DateTime
  actualDeliveryTime DateTime
  payment Payment
  review Review
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table OrderItem {
  id String [pk]
  order Order [not null]
  orderId String [not null]
  dish Dish [not null]
  dishId String [not null]
  quantity Int [not null, default: 1]
  unitPrice Decimal [not null]
  dishTitle String [not null]
  dishDescription String
}

Table Review {
  id String [pk]
  rating Int [not null]
  comment String
  customer User [not null]
  customerId String [not null]
  chef ChefProfile [not null]
  chefId String [not null]
  order Order [not null]
  orderId String [unique, not null]
  createdAt DateTime [default: `now()`, not null]

  indexes {
    (customerId, orderId) [unique]
  }
}

Table Payment {
  id String [pk]
  user User [not null]
  userId String [not null]
  order Order [not null]
  orderId String [unique, not null]
  provider String [not null]
  providerId String [not null]
  amount Decimal [not null]
  status PaymentStatus [not null, default: 'PENDING']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Enum Role {
  CUSTOMER
  CHEF
  ADMIN
}

Enum OrderStatus {
  PENDING
  ACCEPTED
  IN_PREPARATION
  READY_FOR_DELIVERY
  OUT_FOR_DELIVERY
  DELIVERED
  CANCELLED
}

Enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}

Ref: ChefProfile.userId - User.id [delete: Cascade]

Ref: Dish.chefId > ChefProfile.id [delete: Cascade]

Ref: Order.customerId > User.id

Ref: Order.chefId > ChefProfile.id

Ref: OrderItem.orderId > Order.id [delete: Cascade]

Ref: OrderItem.dishId > Dish.id

Ref: Review.customerId > User.id

Ref: Review.chefId > ChefProfile.id

Ref: Review.orderId - Order.id

Ref: Payment.userId > User.id

Ref: Payment.orderId - Order.id